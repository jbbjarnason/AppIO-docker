# CLion remote docker environment (How to build docker container, run and stop it)
#
# Build and run:
#   docker build -t clion/remote-cpp-env-for-appio:0.0.1 -f Dockerfile.develop .
#   docker run -d --cap-add sys_ptrace -p2222:22 --name clion_remote_env clion/remote-cpp-env-for-appio:0.0.1
#   ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[localhost]:2222"
#
# SSH to container:
#   docker exec -it clion_remote_env /bin/bash
#
# stop:
#   docker stop clion_remote_env
#   docker system prune
#
# ssh credentials (test user):
#   user@password

FROM ubuntu:19.10

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update \
  && apt-get install -y ssh \
      build-essential \
      gcc \
      g++ \
      gdb \
      clang \
      cmake \
      rsync \
      tar \
      bash-completion \
      vim \
      python \
      rapidjson-dev \
      nlohmann-json3-dev \
      libboost-all-dev \
      libzmq3-dev \
      liblua5.3-dev \
      lua5.3 \
      luarocks \
      git \
  && apt-get clean

RUN luarocks install penlight

RUN git clone --progress --verbose https://github.com/zeromq/azmq.git azmq \
    && cd azmq \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j 12 \
    && make install

RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd

RUN useradd -m user \
  && yes password | passwd user

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]
